
/** 
 *  MULTIPLY HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like multiplication etc
 *  
 *  The task is to write within the `MAIN` macro below, a function named `multiply` that takes in 2 uint256s, and returns their product. Be sure to revert on overflow
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function multiply(uint256, uint256) payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    __FUNC_SIG(multiply) eq multi jumpi
    err jump
   
    multi: 
        0x04 calldataload
        0x24 calldataload
        dup2 dup2 mul 
        dup1 iszero store_return jumpi
        swap1 dup2 
        dup2 dup2 
        lt err jumpi
        swap1 dup2 lt err jumpi
        store_return jump
    err: 
        0x00 0x00 revert
    store_return: 
        0x00 mstore
        0x20 0x00 return
    
}